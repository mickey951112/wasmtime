test legalizer
set enable_heap_access_spectre_mitigation=true
target aarch64
target x86_64

;; Test that when both (1) dynamic memories and (2) heap access spectre
;; mitigations are enabled, we deduplicate the bounds check between the two.

function %wasm_load(i64 vmctx, i32) -> i32 wasmtime_system_v {
    gv0 = vmctx
    gv1 = load.i64 notrap aligned gv0+88
    gv2 = load.i64 notrap aligned gv0+80
    heap0 = dynamic gv2, min 0, bound gv1, offset_guard 0x8000_0000, index_type i32

block0(v0: i64, v1: i32):
    v2 = heap_addr.i64 heap0, v1, 0, 4
    v3 = load.i32 little heap v2
    return v3
}

; check:  block0(v0: i64, v1: i32):
; nextln:     v4 = uextend.i64 v1
; nextln:     v5 = load.i64 notrap aligned v0+88
; nextln:     v6 = iconst.i64 4
; nextln:     v7 = uadd_overflow_trap v4, v6, heap_oob  ; v6 = 4
; nextln:     v8 = load.i64 notrap aligned v0+80
; nextln:     v9 = iadd v8, v4
; nextln:     v10 = iconst.i64 0
; nextln:     v11 = icmp ugt v7, v5
; nextln:     v2 = select_spectre_guard v11, v10, v9  ; v10 = 0
; nextln:     v3 = load.i32 little heap v2
; nextln:     return v3
