test compile precise-output
target x86_64

function %f0(i64, i64) -> i64, i64 {
block0(v0: i64, v1: i64):
    v2 = load.i64 v1
    v3 = icmp eq v0, v2
    v4 = bint.i64 v3
    v5 = select.i64 v3, v0, v1
    return v4, v5
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    0(%rsi), %rcx
;   cmpq    %rcx, %rdi
;   setz    %al
;   andq    %rax, $1, %rax
;   cmpq    %rcx, %rdi
;   cmovzq  %rdi, %rsi, %rsi
;   movq    %rsi, %rdx
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %f1(f64, i64) -> i64, f64 {
block0(v0: f64, v1: i64):
    v2 = load.f64 v1
    v3 = fcmp eq v0, v2
    v4 = bint.i64 v3
    v5 = select.f64 v3, v0, v0
    return v4, v5
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movsd   0(%rdi), %xmm12
;   ucomisd %xmm12, %xmm0
;   setnp   %al
;   setz    %r8b
;   andl    %eax, %r8d, %eax
;   andq    %rax, $1, %rax
;   ucomisd %xmm0, %xmm12
;   movdqa  %xmm0, %xmm6
;   mov z, sd; j%xmm6 $next; mov%xmm0 %xmm0, %xmm0; $next: 
;   mov np, sd; j%xmm6 $next; mov%xmm0 %xmm0, %xmm0; $next: 
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

