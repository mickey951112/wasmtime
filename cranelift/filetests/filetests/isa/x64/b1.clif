test compile precise-output
target x86_64

function %f0(b1, i32, i32) -> i32 {
block0(v0: b1, v1: i32, v2: i32):
    v3 = select.i32 v0, v1, v2
    return v3
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   testb   $1, %dil
;   cmovnzl %esi, %edx, %edx
;   movq    %rdx, %rax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %f1(b1) -> i32 {
block0(v0: b1):
    brnz v0, block1
    jump block2
block1:
    v1 = iconst.i32 1
    return v1
block2:
    v2 = iconst.i32 2
    return v2
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   testb   $1, %dil
;   jnz     label1; j label2
; block1:
;   movl    $1, %eax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; block2:
;   movl    $2, %eax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

function %f2(b1) -> i32 {
block0(v0: b1):
    brz v0, block1
    jump block2
block1:
    v1 = iconst.i32 1
    return v1
block2:
    v2 = iconst.i32 2
    return v2
}

;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   testb   $1, %dil
;   jz      label1; j label2
; block1:
;   movl    $1, %eax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; block2:
;   movl    $2, %eax
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret

