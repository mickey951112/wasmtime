test compile precise-output
set enable_simd
target x86_64

function %bnot_i32x4(i32x4) -> i32x4 {
block0(v0: i32x4):
    v1 = bnot v0
    return v1
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   uninit  %xmm3
;   pcmpeqd %xmm3, %xmm3, %xmm3
;   pxor    %xmm0, %xmm3, %xmm0
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   pcmpeqd %xmm3, %xmm3
;   pxor %xmm3, %xmm0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %vany_true_i32x4(i32x4) -> i8 {
block0(v0: i32x4):
    v1 = vany_true v0
    return v1
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   ptest   %xmm0, %xmm0
;   setnz   %al
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   ptest %xmm0, %xmm0
;   setne %al
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %vall_true_i64x2(i64x2) -> i8 {
block0(v0: i64x2):
    v1 = vall_true v0
    return v1
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   uninit  %xmm3
;   pxor    %xmm3, %xmm3, %xmm3
;   movdqa  %xmm0, %xmm6
;   pcmpeqq %xmm6, %xmm3, %xmm6
;   ptest   %xmm6, %xmm6
;   setz    %al
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   pxor %xmm3, %xmm3
;   movdqa %xmm0, %xmm6
;   pcmpeqq %xmm3, %xmm6
;   ptest %xmm6, %xmm6
;   sete %al
;   movq %rbp, %rsp
;   popq %rbp
;   retq

