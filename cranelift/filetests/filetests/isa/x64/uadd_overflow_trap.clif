test compile precise-output
target x86_64

function %f0(i32) -> i32 {
block0(v0: i32):
    v1 = iconst.i32 127
    v2 = uadd_overflow_trap v0, v1, user0
    return v2
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rax
;   addl    %eax, $127, %eax
;   jnb ; ud2 user0 ;
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
;   pushq %rbp
;   movq %rsp, %rbp
; block0: ; offset 0x4
;   movq %rdi, %rax
;   addl $0x7f, %eax
;   jae 0x12
;   ud2 ; trap: user0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f1(i32) -> i32 {
block0(v0: i32):
    v1 = iconst.i32 127
    v2 = uadd_overflow_trap v1, v0, user0
    return v2
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rax
;   addl    %eax, $127, %eax
;   jnb ; ud2 user0 ;
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
;   pushq %rbp
;   movq %rsp, %rbp
; block0: ; offset 0x4
;   movq %rdi, %rax
;   addl $0x7f, %eax
;   jae 0x12
;   ud2 ; trap: user0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f2(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
    v2 = uadd_overflow_trap v0, v1, user0
    return v2
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rax
;   addl    %eax, %esi, %eax
;   jnb ; ud2 user0 ;
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
;   pushq %rbp
;   movq %rsp, %rbp
; block0: ; offset 0x4
;   movq %rdi, %rax
;   addl %esi, %eax
;   jae 0x11
;   ud2 ; trap: user0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f3(i64) -> i64 {
block0(v0: i64):
    v1 = iconst.i64 127
    v2 = uadd_overflow_trap v0, v1, user0
    return v2
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rax
;   addq    %rax, $127, %rax
;   jnb ; ud2 user0 ;
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
;   pushq %rbp
;   movq %rsp, %rbp
; block0: ; offset 0x4
;   movq %rdi, %rax
;   addq $0x7f, %rax
;   jae 0x13
;   ud2 ; trap: user0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f3(i64) -> i64 {
block0(v0: i64):
    v1 = iconst.i64 127
    v2 = uadd_overflow_trap v1, v0, user0
    return v2
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rax
;   addq    %rax, $127, %rax
;   jnb ; ud2 user0 ;
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
;   pushq %rbp
;   movq %rsp, %rbp
; block0: ; offset 0x4
;   movq %rdi, %rax
;   addq $0x7f, %rax
;   jae 0x13
;   ud2 ; trap: user0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f4(i64, i64) -> i64 {
block0(v0: i64, v1: i64):
    v2 = uadd_overflow_trap v0, v1, user0
    return v2
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %rdi, %rax
;   addq    %rax, %rsi, %rax
;   jnb ; ud2 user0 ;
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
;   pushq %rbp
;   movq %rsp, %rbp
; block0: ; offset 0x4
;   movq %rdi, %rax
;   addq %rsi, %rax
;   jae 0x12
;   ud2 ; trap: user0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

