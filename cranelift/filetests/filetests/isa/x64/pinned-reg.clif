test compile precise-output
set enable_pinned_reg=true
target x86_64

function %f0() {
block0:
    v1 = get_pinned_reg.i64
    v2 = iadd_imm v1, 1
    set_pinned_reg v2
    return
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movq    %r15, %rsi
;   addq    %rsi, $1, %rsi
;   movq    %rsi, %r15
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq %r15, %rsi
;   addq $1, %rsi
;   movq %rsi, %r15
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f1() windows_fastcall {
block0:
    v1 = get_pinned_reg.i64
    v2 = iadd_imm v1, 1
    set_pinned_reg v2
    return
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
;   subq    %rsp, $16, %rsp
;   movq    %rsi, 0(%rsp)
; block0:
;   movq    %r15, %rsi
;   addq    %rsi, $1, %rsi
;   movq    %rsi, %r15
;   movq    0(%rsp), %rsi
;   addq    %rsp, $16, %rsp
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
;   subq $0x10, %rsp
;   movq %rsi, (%rsp)
; block1: ; offset 0xc
;   movq %r15, %rsi
;   addq $1, %rsi
;   movq %rsi, %r15
;   movq (%rsp), %rsi
;   addq $0x10, %rsp
;   movq %rbp, %rsp
;   popq %rbp
;   retq

