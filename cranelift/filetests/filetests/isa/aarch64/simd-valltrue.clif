test compile precise-output
set unwind_info=false
target aarch64

function %fn0(i8x8) -> i8 {
block0(v0: i8x8):
    v1 = vall_true v0
    return v1
}

; block0:
;   uminv b3, v0.8b
;   mov x5, v3.d[0]
;   subs xzr, x5, #0
;   cset x0, ne
;   ret

function %fn1(i8x16) -> i8 {
block0(v0: i8x16):
    v1 = vall_true v0
    return v1
}

; block0:
;   uminv b3, v0.16b
;   mov x5, v3.d[0]
;   subs xzr, x5, #0
;   cset x0, ne
;   ret

function %fn2(i16x4) -> i8 {
block0(v0: i16x4):
    v1 = vall_true v0
    return v1
}

; block0:
;   uminv h3, v0.4h
;   mov x5, v3.d[0]
;   subs xzr, x5, #0
;   cset x0, ne
;   ret

function %fn3(i16x8) -> i8 {
block0(v0: i16x8):
    v1 = vall_true v0
    return v1
}

; block0:
;   uminv h3, v0.8h
;   mov x5, v3.d[0]
;   subs xzr, x5, #0
;   cset x0, ne
;   ret

function %fn4(i32x2) -> i8 {
block0(v0: i32x2):
    v1 = vall_true v0
    return v1
}

; block0:
;   mov x3, v0.d[0]
;   subs xzr, xzr, x3, LSR 32
;   ccmp w3, #0, #nZcv, ne
;   cset x0, ne
;   ret

function %fn5(i32x4) -> i8 {
block0(v0: i32x4):
    v1 = vall_true v0
    return v1
}

; block0:
;   uminv s3, v0.4s
;   mov x5, v3.d[0]
;   subs xzr, x5, #0
;   cset x0, ne
;   ret

function %fn6(i64x2) -> i8 {
block0(v0: i64x2):
    v1 = vall_true v0
    return v1
}

; block0:
;   cmeq v3.2d, v0.2d, #0
;   addp v5.2d, v3.2d, v3.2d
;   fcmp d5, d5
;   cset x0, eq
;   ret

