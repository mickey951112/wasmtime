test compile precise-output
set unwind_info=false
target aarch64

function %f(i32) -> i32 {
block0(v0: i32):
  br_table v0, block4, [block1, block2, block3]

block1:
  v1 = iconst.i32 1
  jump block5(v1)

block2:
  v2 = iconst.i32 2
  jump block5(v2)

block3:
  v3 = iconst.i32 3
  jump block5(v3)

block4:
  v4 = iconst.i32 4
  jump block5(v4)

block5(v5: i32):
  v6 = iadd.i32 v0, v5
  return v6
}

; VCode:
; block0:
;   emit_island 44
;   subs wzr, w0, #3
;   b.hs label1 ; csel x15, xzr, x0, hs ; csdb ; adr x14, pc+16 ; ldrsw x15, [x14, x15, uxtw #2] ; add x14, x14, x15 ; br x14 ; jt_entries [Label(MachLabel(3)), Label(MachLabel(5)), Label(MachLabel(7))]
; block1:
;   movz w5, #4
;   b label2
; block2:
;   b label9
; block3:
;   movz w5, #1
;   b label4
; block4:
;   b label9
; block5:
;   movz w5, #2
;   b label6
; block6:
;   b label9
; block7:
;   movz w5, #3
;   b label8
; block8:
;   b label9
; block9:
;   add w0, w0, w5
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   cmp w0, #3
;   b.hs #0x2c
;   csel x15, xzr, x0, hs
;   csdb
;   adr x14, #0x20
;   ldrsw x15, [x14, w15, uxtw #2]
;   add x14, x14, x15
;   br x14
;   .byte 0x14, 0x00, 0x00, 0x00
;   .byte 0x1c, 0x00, 0x00, 0x00
;   .byte 0x24, 0x00, 0x00, 0x00
; block1: ; offset 0x2c
;   mov w5, #4
; block2: ; offset 0x30
;   b #0x48
; block3: ; offset 0x34
;   mov w5, #1
; block4: ; offset 0x38
;   b #0x48
; block5: ; offset 0x3c
;   mov w5, #2
; block6: ; offset 0x40
;   b #0x48
; block7: ; offset 0x44
;   mov w5, #3
; block8: ; offset 0x48
;   add w0, w0, w5
;   ret

