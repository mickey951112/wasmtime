test compile precise-output
set unwind_info=false
target riscv64 has_v


function %store_i8x16(i64, i8x16) {
block0(v0: i64, v1: i8x16):
    store.i8x16 v1, v0
    return
}

; VCode:
; block0:
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70, 0x08, 0xcc
;   auipc t6, 0
;   ld t6, 0xc(t6)
;   j 0xc
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   add t6, t6, a0
;   .byte 0x27, 0x85, 0x0f, 0x02
;   ret

function %store_i16x8(i64, i16x8) {
block0(v0: i64, v1: i16x8):
    store.i16x8 v1, v0
    return
}

; VCode:
; block0:
;   vse16.v v10,0(a0) #avl=8, #vtype=(e16, m1, ta, ma)
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70, 0x84, 0xcc
;   auipc t6, 0
;   ld t6, 0xc(t6)
;   j 0xc
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   add t6, t6, a0
;   .byte 0x27, 0xd5, 0x0f, 0x02
;   ret

function %store_i32x4(i64, i32x4) {
block0(v0: i64, v1: i32x4):
    store.i32x4 v1, v0
    return
}

; VCode:
; block0:
;   vse32.v v10,0(a0) #avl=4, #vtype=(e32, m1, ta, ma)
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70, 0x02, 0xcd
;   auipc t6, 0
;   ld t6, 0xc(t6)
;   j 0xc
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   add t6, t6, a0
;   .byte 0x27, 0xe5, 0x0f, 0x02
;   ret

function %store_i64x2(i64, i64x2) {
block0(v0: i64, v1: i64x2):
    store.i64x2 v1, v0
    return
}

; VCode:
; block0:
;   vse64.v v10,0(a0) #avl=2, #vtype=(e64, m1, ta, ma)
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70, 0x81, 0xcd
;   auipc t6, 0
;   ld t6, 0xc(t6)
;   j 0xc
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   add t6, t6, a0
;   .byte 0x27, 0xf5, 0x0f, 0x02
;   ret

