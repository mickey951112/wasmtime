;;! target = "riscv64"
;;!
;;! settings = ['enable_heap_access_spectre_mitigation=false']
;;!
;;! compile = true
;;!
;;! [globals.vmctx]
;;! type = "i64"
;;! vmctx = true
;;!
;;! [globals.heap_base]
;;! type = "i64"
;;! load = { base = "vmctx", offset = 0, readonly = true }
;;!
;;! [globals.heap_bound]
;;! type = "i64"
;;! load = { base = "vmctx", offset = 8, readonly = true }
;;!
;;! [[heaps]]
;;! base = "heap_base"
;;! min_size = 0x10000
;;! offset_guard_size = 0
;;! index_type = "i32"
;;! style = { kind = "dynamic", bound = "heap_bound" }

;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;; !!! GENERATED BY 'make-load-store-tests.sh' DO NOT EDIT !!!
;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

(module
  (memory i32 1)

  (func (export "do_store") (param i32 i32)
    local.get 0
    local.get 1
    i32.store offset=0)

  (func (export "do_load") (param i32) (result i32)
    local.get 0
    i32.load offset=0))

;; function u0:0:
;; block0:
;;   uext.w a6,a0
;;   ld a7,8(a2)
;;   addi a7,a7,-4
;;   ugt a7,a6,a7##ty=i64
;;   bne a7,zero,taken(label1),not_taken(label2)
;; block2:
;;   ld t3,0(a2)
;;   add t3,t3,a6
;;   sw a1,0(t3)
;;   j label3
;; block3:
;;   ret
;; block1:
;;   udf##trap_code=heap_oob
;;
;; function u0:1:
;; block0:
;;   uext.w a6,a0
;;   ld a7,8(a1)
;;   addi a7,a7,-4
;;   ugt a7,a6,a7##ty=i64
;;   bne a7,zero,taken(label1),not_taken(label2)
;; block2:
;;   ld t3,0(a1)
;;   add t3,t3,a6
;;   lw a0,0(t3)
;;   j label3
;; block3:
;;   ret
;; block1:
;;   udf##trap_code=heap_oob
