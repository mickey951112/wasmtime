test compile precise-output
set unwind_info=false
target riscv64

function %f(i8, i64, i64) -> i64 {
block0(v0: i8, v1: i64, v2: i64):
  v3 = iconst.i8 42
  v4 = ifcmp v0, v3
  v5 = selectif.i64 eq v4, v1, v2
  return v5
}

; block0:
;   li a3,42
;   uext.b a5,a0
;   uext.b a7,a3
;   eq t4,a5,a7##ty=i8
;   selectif a0,a1,a2##test=t4
;   ret

function %g(i8) -> i8 {
block0(v0: i8):
  v3 = iconst.i8 42
  v4 = ifcmp v0, v3
  v5 = trueif eq v4
  return v5
}

; block0:
;   mv a5,a0
;   li a0,42
;   uext.b a2,a5
;   uext.b a4,a0
;   eq a0,a2,a4##ty=i8
;   ret

function %h(i8, i8, i8) -> i8 {
block0(v0: i8, v1: i8, v2: i8):
  v3 = bitselect.i8 v0, v1, v2
  return v3
}

; block0:
;   mv t3,a2
;   and a2,a0,a1
;   not a4,a0
;   and a6,a4,t3
;   or a0,a2,a6
;   ret

function %i(i8, i8, i8) -> i8 {
block0(v0: i8, v1: i8, v2: i8):
  v3 = select.i8 v0, v1, v2
  return v3
}

; block0:
;   andi a3,a0,255
;   select_i8 a0,a1,a2##condition=a3
;   ret

function %i(i32, i8, i8) -> i8 {
block0(v0: i32, v1: i8, v2: i8):
  v3 = iconst.i32 42
  v4 = icmp.i32 eq v0, v3
  v5 = select.i8 v4, v1, v2
  return v5
}

; block0:
;   li a4,42
;   uext.w a6,a0
;   uext.w t3,a4
;   eq t0,a6,t3##ty=i32
;   andi a6,t0,255
;   select_i8 a0,a1,a2##condition=a6
;   ret

function %i128_select(i8, i128, i128) -> i128 {
block0(v0: i8, v1: i128, v2: i128):
  v3 = select.i128 v0, v1, v2
  return v3
}

; block0:
;   andi a5,a0,255
;   select_i128 [a0,a1],[a1,a2],[a3,a4]##condition=a5
;   ret

