test compile precise-output
set unwind_info=false
target riscv64

function %dynamic_heap_check(i64 vmctx, i32) -> i64 {
    gv0 = vmctx
    gv1 = load.i64 notrap aligned gv0
    heap0 = dynamic gv0, bound gv1, offset_guard 0x1000, index_type i32

block0(v0: i64, v1: i32):
    v2 = heap_addr.i64 heap0, v1, 0
    return v2
}

; block0:
;   uext.w t3,a1
;   ld t4,0(a0)
;   addi t4,t4,0
;   ugt t0,t3,t4##ty=i64
;   beq t0,zero,taken(label1),not_taken(label2)
; block1:
;   add t0,a0,t3
;   ugt t3,t3,t4##ty=i64
;   li t1,0
;   selectif_spectre_guard a0,t1,t0##test=t3
;   ret
; block2:
;   udf##trap_code=heap_oob

function %static_heap_check(i64 vmctx, i32) -> i64 {
    gv0 = vmctx
    heap0 = static gv0, bound 0x1_0000, offset_guard 0x1000, index_type i32

block0(v0: i64, v1: i32):
    v2 = heap_addr.i64 heap0, v1, 0
    return v2
}

; block0:
;   uext.w t3,a1
;   lui a7,16
;   ugt t4,t3,a7##ty=i64
;   beq t4,zero,taken(label1),not_taken(label2)
; block1:
;   add t4,a0,t3
;   lui a7,16
;   ugt t0,t3,a7##ty=i64
;   li t1,0
;   selectif_spectre_guard a0,t1,t4##test=t0
;   ret
; block2:
;   udf##trap_code=heap_oob

