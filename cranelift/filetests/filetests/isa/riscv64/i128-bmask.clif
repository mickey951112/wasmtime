test compile precise-output
set unwind_info=false
target riscv64

function %bmask_i128_i128(i128) -> i128 {
block0(v0: i128):
  v1 = bmask.i128 v0
  return v1
}

; block0:
;   or a2,a0,a1
;   li a4,-1
;   select_reg a1,zero,a4##condition=(zero eq a2)
;   mv a0,a1
;   ret

function %bmask_i128_i64(i128) -> i64 {
block0(v0: i128):
  v1 = bmask.i64 v0
  return v1
}

; block0:
;   or a1,a0,a1
;   li a3,-1
;   select_reg a0,zero,a3##condition=(zero eq a1)
;   ret

function %bmask_i128_i32(i128) -> i32 {
block0(v0: i128):
  v1 = bmask.i32 v0
  return v1
}

; block0:
;   or a1,a0,a1
;   li a3,-1
;   select_reg a0,zero,a3##condition=(zero eq a1)
;   ret

function %bmask_i128_i16(i128) -> i16 {
block0(v0: i128):
  v1 = bmask.i16 v0
  return v1
}

; block0:
;   or a1,a0,a1
;   li a3,-1
;   select_reg a0,zero,a3##condition=(zero eq a1)
;   ret

function %bmask_i128_i8(i128) -> i8 {
block0(v0: i128):
  v1 = bmask.i8 v0
  return v1
}

; block0:
;   or a1,a0,a1
;   li a3,-1
;   select_reg a0,zero,a3##condition=(zero eq a1)
;   ret

function %bmask_i64_i128(i64) -> i128 {
block0(v0: i64):
  v1 = bmask.i128 v0
  return v1
}

; block0:
;   li a1,-1
;   select_reg a1,zero,a1##condition=(zero eq a0)
;   mv a0,a1
;   ret

function %bmask_i32_i128(i32) -> i128 {
block0(v0: i32):
  v1 = bmask.i128 v0
  return v1
}

; block0:
;   li a1,-1
;   select_reg a1,zero,a1##condition=(zero eq a0)
;   mv a0,a1
;   ret

function %bmask_i16_i128(i16) -> i128 {
block0(v0: i16):
  v1 = bmask.i128 v0
  return v1
}

; block0:
;   li a1,-1
;   select_reg a1,zero,a1##condition=(zero eq a0)
;   mv a0,a1
;   ret

function %bmask_i8_i128(i8) -> i128 {
block0(v0: i8):
  v1 = bmask.i128 v0
  return v1
}

; block0:
;   li a1,-1
;   select_reg a1,zero,a1##condition=(zero eq a0)
;   mv a0,a1
;   ret

