test compile precise-output
set unwind_info=false
target riscv64

function %bmask_i128_i128(i128) -> i128 {
block0(v0: i128):
  v1 = bmask.i128 v0
  return v1
}

; VCode:
; block0:
;   or a0,a0,a1
;   sltu a2,zero,a0
;   sub a1,zero,a2
;   mv a0,a1
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   or a0, a0, a1
;   snez a2, a0
;   neg a1, a2
;   ori a0, a1, 0
;   ret

function %bmask_i128_i64(i128) -> i64 {
block0(v0: i128):
  v1 = bmask.i64 v0
  return v1
}

; VCode:
; block0:
;   or a0,a0,a1
;   sltu a2,zero,a0
;   sub a0,zero,a2
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   or a0, a0, a1
;   snez a2, a0
;   neg a0, a2
;   ret

function %bmask_i128_i32(i128) -> i32 {
block0(v0: i128):
  v1 = bmask.i32 v0
  return v1
}

; VCode:
; block0:
;   or a0,a0,a1
;   sltu a2,zero,a0
;   sub a0,zero,a2
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   or a0, a0, a1
;   snez a2, a0
;   neg a0, a2
;   ret

function %bmask_i128_i16(i128) -> i16 {
block0(v0: i128):
  v1 = bmask.i16 v0
  return v1
}

; VCode:
; block0:
;   or a0,a0,a1
;   sltu a2,zero,a0
;   sub a0,zero,a2
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   or a0, a0, a1
;   snez a2, a0
;   neg a0, a2
;   ret

function %bmask_i128_i8(i128) -> i8 {
block0(v0: i128):
  v1 = bmask.i8 v0
  return v1
}

; VCode:
; block0:
;   or a0,a0,a1
;   sltu a2,zero,a0
;   sub a0,zero,a2
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   or a0, a0, a1
;   snez a2, a0
;   neg a0, a2
;   ret

function %bmask_i64_i128(i64) -> i128 {
block0(v0: i64):
  v1 = bmask.i128 v0
  return v1
}

; VCode:
; block0:
;   sltu t2,zero,a0
;   sub a1,zero,t2
;   mv a0,a1
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   snez t2, a0
;   neg a1, t2
;   ori a0, a1, 0
;   ret

function %bmask_i32_i128(i32) -> i128 {
block0(v0: i32):
  v1 = bmask.i128 v0
  return v1
}

; VCode:
; block0:
;   slli t2,a0,32
;   srli a1,t2,32
;   sltu a3,zero,a1
;   sub a1,zero,a3
;   mv a0,a1
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   slli t2, a0, 0x20
;   srli a1, t2, 0x20
;   snez a3, a1
;   neg a1, a3
;   ori a0, a1, 0
;   ret

function %bmask_i16_i128(i16) -> i128 {
block0(v0: i16):
  v1 = bmask.i128 v0
  return v1
}

; VCode:
; block0:
;   slli t2,a0,48
;   srli a1,t2,48
;   sltu a3,zero,a1
;   sub a1,zero,a3
;   mv a0,a1
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   slli t2, a0, 0x30
;   srli a1, t2, 0x30
;   snez a3, a1
;   neg a1, a3
;   ori a0, a1, 0
;   ret

function %bmask_i8_i128(i8) -> i128 {
block0(v0: i8):
  v1 = bmask.i128 v0
  return v1
}

; VCode:
; block0:
;   andi t2,a0,255
;   sltu a1,zero,t2
;   sub a1,zero,a1
;   mv a0,a1
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   andi t2, a0, 0xff
;   snez a1, t2
;   neg a1, a1
;   ori a0, a1, 0
;   ret

