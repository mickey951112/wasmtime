test compile precise-output
set unwind_info=false
target riscv64

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; ROR, variable
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

function %i128_rotr(i128, i128) -> i128 {
block0(v0: i128, v1: i128):
  v2 = rotr.i128 v0, v1
  return v2
}

; block0:
;   andi a3,a2,63
;   li a4,64
;   sub a6,a4,a3
;   srl t3,a0,a3
;   sll t0,a1,a6
;   mv t1,a1
;   select_reg t2,zero,t0##condition=(a3 eq zero)
;   or a1,t3,t2
;   srl a4,t1,a3
;   sll a5,a0,a6
;   select_reg a7,zero,a5##condition=(a3 eq zero)
;   or t4,a4,a7
;   li t1,64
;   andi a2,a2,127
;   select_reg a0,t4,a1##condition=(a2 uge t1)
;   select_reg a1,a1,t4##condition=(a2 uge t1)
;   ret

function %f0(i64, i64) -> i64 {
block0(v0: i64, v1: i64):
  v2 = rotr.i64 v0, v1
  return v2
}

; block0:
;   mv a7,a0
;   andi a0,a1,63
;   li a2,64
;   sub a4,a2,a0
;   mv t0,a7
;   srl a6,t0,a0
;   sll t3,t0,a4
;   select_reg t0,zero,t3##condition=(a0 eq zero)
;   or a0,a6,t0
;   ret

function %f1(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
  v2 = rotr.i32 v0, v1
  return v2
}

; block0:
;   uext.w a0,a0
;   andi a2,a1,31
;   li a4,32
;   sub a6,a4,a2
;   srl t3,a0,a2
;   sll t0,a0,a6
;   select_reg t2,zero,t0##condition=(a2 eq zero)
;   or a0,t3,t2
;   ret

function %f2(i16, i16) -> i16 {
block0(v0: i16, v1: i16):
  v2 = rotr.i16 v0, v1
  return v2
}

; block0:
;   uext.h a0,a0
;   andi a2,a1,15
;   li a4,16
;   sub a6,a4,a2
;   srl t3,a0,a2
;   sll t0,a0,a6
;   select_reg t2,zero,t0##condition=(a2 eq zero)
;   or a0,t3,t2
;   ret

function %f3(i8, i8) -> i8 {
block0(v0: i8, v1: i8):
  v2 = rotr.i8 v0, v1
  return v2
}

; block0:
;   uext.b a0,a0
;   andi a2,a1,7
;   li a4,8
;   sub a6,a4,a2
;   srl t3,a0,a2
;   sll t0,a0,a6
;   select_reg t2,zero,t0##condition=(a2 eq zero)
;   or a0,t3,t2
;   ret

function %i128_rotl(i128, i128) -> i128 {
block0(v0: i128, v1: i128):
  v2 = rotl.i128 v0, v1
  return v2
}

; block0:
;   andi a3,a2,63
;   li a4,64
;   sub a6,a4,a3
;   sll t3,a0,a3
;   srl t0,a1,a6
;   mv t1,a1
;   select_reg t2,zero,t0##condition=(a3 eq zero)
;   or a1,t3,t2
;   sll a4,t1,a3
;   srl a5,a0,a6
;   select_reg a7,zero,a5##condition=(a3 eq zero)
;   or t4,a4,a7
;   li t1,64
;   andi a2,a2,127
;   select_reg a0,t4,a1##condition=(a2 uge t1)
;   select_reg a1,a1,t4##condition=(a2 uge t1)
;   ret

function %f4(i64, i64) -> i64 {
block0(v0: i64, v1: i64):
  v2 = rotl.i64 v0, v1
  return v2
}

; block0:
;   mv a7,a0
;   andi a0,a1,63
;   li a2,64
;   sub a4,a2,a0
;   mv t0,a7
;   sll a6,t0,a0
;   srl t3,t0,a4
;   select_reg t0,zero,t3##condition=(a0 eq zero)
;   or a0,a6,t0
;   ret

function %f5(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
  v2 = rotl.i32 v0, v1
  return v2
}

; block0:
;   uext.w a0,a0
;   andi a2,a1,31
;   li a4,32
;   sub a6,a4,a2
;   sll t3,a0,a2
;   srl t0,a0,a6
;   select_reg t2,zero,t0##condition=(a2 eq zero)
;   or a0,t3,t2
;   ret

function %f6(i16, i16) -> i16 {
block0(v0: i16, v1: i16):
  v2 = rotl.i16 v0, v1
  return v2
}

; block0:
;   uext.h a0,a0
;   andi a2,a1,15
;   li a4,16
;   sub a6,a4,a2
;   sll t3,a0,a2
;   srl t0,a0,a6
;   select_reg t2,zero,t0##condition=(a2 eq zero)
;   or a0,t3,t2
;   ret

function %f7(i8, i8) -> i8 {
block0(v0: i8, v1: i8):
  v2 = rotl.i8 v0, v1
  return v2
}

; block0:
;   uext.b a0,a0
;   andi a2,a1,7
;   li a4,8
;   sub a6,a4,a2
;   sll t3,a0,a2
;   srl t0,a0,a6
;   select_reg t2,zero,t0##condition=(a2 eq zero)
;   or a0,t3,t2
;   ret

function %f8(i64, i64) -> i64 {
block0(v0: i64, v1: i64):
  v2 = ushr.i64 v0, v1
  return v2
}

; block0:
;   srl a0,a0,a1
;   ret

function %f9(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
  v2 = ushr.i32 v0, v1
  return v2
}

; block0:
;   srlw a0,a0,a1
;   ret

function %f10(i16, i16) -> i16 {
block0(v0: i16, v1: i16):
  v2 = ushr.i16 v0, v1
  return v2
}

; block0:
;   uext.h a0,a0
;   andi a2,a1,15
;   srlw a0,a0,a2
;   ret

function %f11(i8, i8) -> i8 {
block0(v0: i8, v1: i8):
  v2 = ushr.i8 v0, v1
  return v2
}

; block0:
;   uext.b a0,a0
;   andi a2,a1,7
;   srlw a0,a0,a2
;   ret

function %f12(i64, i64) -> i64 {
block0(v0: i64, v1: i64):
  v2 = ishl.i64 v0, v1
  return v2
}

; block0:
;   sll a0,a0,a1
;   ret

function %f13(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
  v2 = ishl.i32 v0, v1
  return v2
}

; block0:
;   sllw a0,a0,a1
;   ret

function %f14(i16, i16) -> i16 {
block0(v0: i16, v1: i16):
  v2 = ishl.i16 v0, v1
  return v2
}

; block0:
;   andi a1,a1,15
;   sllw a0,a0,a1
;   ret

function %f15(i8, i8) -> i8 {
block0(v0: i8, v1: i8):
  v2 = ishl.i8 v0, v1
  return v2
}

; block0:
;   andi a1,a1,7
;   sllw a0,a0,a1
;   ret

function %f16(i64, i64) -> i64 {
block0(v0: i64, v1: i64):
  v2 = sshr.i64 v0, v1
  return v2
}

; block0:
;   sra a0,a0,a1
;   ret

function %f17(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
  v2 = sshr.i32 v0, v1
  return v2
}

; block0:
;   sraw a0,a0,a1
;   ret

function %f18(i16, i16) -> i16 {
block0(v0: i16, v1: i16):
  v2 = sshr.i16 v0, v1
  return v2
}

; block0:
;   sext.h a0,a0
;   andi a2,a1,15
;   sra a0,a0,a2
;   ret

function %f19(i8, i8) -> i8 {
block0(v0: i8, v1: i8):
  v2 = sshr.i8 v0, v1
  return v2
}

; block0:
;   sext.b a0,a0
;   andi a2,a1,7
;   sra a0,a0,a2
;   ret

function %f20(i64) -> i64 {
block0(v0: i64):
  v1 = iconst.i32 17
  v2 = rotr.i64 v0, v1
  return v2
}

; block0:
;   li t2,17
;   andi a1,t2,63
;   li a3,64
;   sub a5,a3,a1
;   srl a7,a0,a1
;   sll t4,a0,a5
;   select_reg t1,zero,t4##condition=(a1 eq zero)
;   or a0,a7,t1
;   ret

function %f21(i64) -> i64 {
block0(v0: i64):
  v1 = iconst.i32 17
  v2 = rotl.i64 v0, v1
  return v2
}

; block0:
;   li t2,17
;   andi a1,t2,63
;   li a3,64
;   sub a5,a3,a1
;   sll a7,a0,a1
;   srl t4,a0,a5
;   select_reg t1,zero,t4##condition=(a1 eq zero)
;   or a0,a7,t1
;   ret

function %f22(i32) -> i32 {
block0(v0: i32):
  v1 = iconst.i32 17
  v2 = rotl.i32 v0, v1
  return v2
}

; block0:
;   uext.w t2,a0
;   li a1,17
;   andi a3,a1,31
;   li a5,32
;   sub a7,a5,a3
;   sll t4,t2,a3
;   srl t1,t2,a7
;   select_reg a0,zero,t1##condition=(a3 eq zero)
;   or a0,t4,a0
;   ret

function %f23(i16) -> i16 {
block0(v0: i16):
  v1 = iconst.i32 10
  v2 = rotl.i16 v0, v1
  return v2
}

; block0:
;   uext.h t2,a0
;   li a1,10
;   andi a3,a1,15
;   li a5,16
;   sub a7,a5,a3
;   sll t4,t2,a3
;   srl t1,t2,a7
;   select_reg a0,zero,t1##condition=(a3 eq zero)
;   or a0,t4,a0
;   ret

function %f24(i8) -> i8 {
block0(v0: i8):
  v1 = iconst.i32 3
  v2 = rotl.i8 v0, v1
  return v2
}

; block0:
;   uext.b t2,a0
;   li a1,3
;   andi a3,a1,7
;   li a5,8
;   sub a7,a5,a3
;   sll t4,t2,a3
;   srl t1,t2,a7
;   select_reg a0,zero,t1##condition=(a3 eq zero)
;   or a0,t4,a0
;   ret

function %f25(i64) -> i64 {
block0(v0: i64):
  v1 = iconst.i32 17
  v2 = ushr.i64 v0, v1
  return v2
}

; block0:
;   srli a0,a0,17
;   ret

function %f26(i64) -> i64 {
block0(v0: i64):
  v1 = iconst.i32 17
  v2 = sshr.i64 v0, v1
  return v2
}

; block0:
;   srai a0,a0,17
;   ret

function %f27(i64) -> i64 {
block0(v0: i64):
  v1 = iconst.i32 17
  v2 = ishl.i64 v0, v1
  return v2
}

; block0:
;   slli a0,a0,17
;   ret

