test compile precise-output
set unwind_info=false
target riscv64 has_v

function %fmin_f64x2(f64x2, f64x2) -> f64x2 {
block0(v0: f64x2, v1: f64x2):
    v2 = fmin v0, v1
    return v2
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v1,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   vle8.v v3,32(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   vmfeq.vv v6,v1,v1 #avl=2, #vtype=(e64, m1, ta, ma)
;   vmfeq.vv v8,v3,v3 #avl=2, #vtype=(e64, m1, ta, ma)
;   vmand.mm v0,v6,v8 #avl=2, #vtype=(e64, m1, ta, ma)
;   auipc t4,0; ld t4,12(t4); j 12; .8byte 0x7ff8000000000000
;   vmv.v.x v14,t4 #avl=2, #vtype=(e64, m1, ta, ma)
;   vfmin.vv v16,v1,v3 #avl=2, #vtype=(e64, m1, ta, ma)
;   vmerge.vvm v18,v14,v16,v0.t #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v18,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   ori s0, sp, 0
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, s0, 0x10
;   .byte 0x87, 0x80, 0x0f, 0x02
;   addi t6, s0, 0x20
;   .byte 0x87, 0x81, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x81, 0xcd
;   .byte 0x57, 0x93, 0x10, 0x62
;   .byte 0x57, 0x94, 0x31, 0x62
;   .byte 0x57, 0x20, 0x64, 0x66
;   auipc t4, 0
;   ld t4, 0xc(t4)
;   j 0xc
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0xf8, 0x7f
;   .byte 0x57, 0xc7, 0x0e, 0x5e
;   .byte 0x57, 0x98, 0x11, 0x12
;   .byte 0x57, 0x09, 0xe8, 0x5c
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0x27, 0x09, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %fmin_f32x4(f32x4, f32x4) -> f32x4 {
block0(v0: f32x4, v1: f32x4):
    v2 = fmin v0, v1
    return v2
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v1,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   vle8.v v3,32(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   vmfeq.vv v6,v1,v1 #avl=4, #vtype=(e32, m1, ta, ma)
;   vmfeq.vv v8,v3,v3 #avl=4, #vtype=(e32, m1, ta, ma)
;   vmand.mm v0,v6,v8 #avl=4, #vtype=(e32, m1, ta, ma)
;   lui t4,523264
;   vmv.v.x v14,t4 #avl=4, #vtype=(e32, m1, ta, ma)
;   vfmin.vv v16,v1,v3 #avl=4, #vtype=(e32, m1, ta, ma)
;   vmerge.vvm v18,v14,v16,v0.t #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v18,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   ori s0, sp, 0
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, s0, 0x10
;   .byte 0x87, 0x80, 0x0f, 0x02
;   addi t6, s0, 0x20
;   .byte 0x87, 0x81, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x02, 0xcd
;   .byte 0x57, 0x93, 0x10, 0x62
;   .byte 0x57, 0x94, 0x31, 0x62
;   .byte 0x57, 0x20, 0x64, 0x66
;   lui t4, 0x7fc00
;   .byte 0x57, 0xc7, 0x0e, 0x5e
;   .byte 0x57, 0x98, 0x11, 0x12
;   .byte 0x57, 0x09, 0xe8, 0x5c
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0x27, 0x09, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

