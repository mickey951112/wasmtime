test interpret
test run
target aarch64
target s390x
target x86_64

function %simd_icmp_ule_i8(i8x16, i8x16) -> i8x16 {
block0(v0: i8x16, v1: i8x16):
    v2 = icmp ule v0, v1
    return v2
}
; run: %simd_icmp_ule_i8([0 1 -1 0 -5 1 0 0 0 0 0 0 0 0 0 0], [0 0 -1 1 -1 -1 0 0 0 0 0 0 0 0 0 0]) == [-1 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]

function %simd_icmp_ule_i16(i16x8, i16x8) -> i16x8 {
block0(v0: i16x8, v1: i16x8):
    v2 = icmp ule v0, v1
    return v2
}
; run: %simd_icmp_ule_i16([0 1 -1 0 -5 1 0 0], [0 0 -1 1 -1 -1 0 0]) == [-1 0 -1 -1 -1 -1 -1 -1]

function %simd_icmp_ule_i32(i32x4, i32x4) -> i32x4 {
block0(v0: i32x4, v1: i32x4):
    v2 = icmp ule v0, v1
    return v2
}
; run: %simd_icmp_ule_i32([0 1 -1 0], [0 0 -1 1]) == [-1 0 -1 -1]
; run: %simd_icmp_ule_i32([-5 1 0 0], [-1 -1 0 0]) == [-1 -1 -1 -1]




function %icmp_ule_const_i16x8() -> i8 {
block0:
    v0 = vconst.i16x8 [-1  0 0 0 0 0 0 0]
    v1 = vconst.i16x8 [-1 -1 0 0 0 0 0 0]
    v2 = icmp ule v0, v1
    v8 = vall_true v2
    return v8
}
; run: %icmp_ule_const_i16x8() == 1
