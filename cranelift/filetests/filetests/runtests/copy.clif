test interpret
test run
target aarch64
target s390x
; x86_64 regards this as an unused opcode.

function %copy_i8(i8) -> i8 {
block0(v0: i8):
  v1 = copy v0
  return v1
}
; run: %copy_i8(0) == 0
; run: %copy_i8(255) == 255
; run: %copy_i8(-1) == -1
; run: %copy_i8(127) == 127

function %copy_i16(i16) -> i16 {
block0(v0: i16):
  v1 = copy v0
  return v1
}
; run: %copy_i16(0) == 0
; run: %copy_i16(65535) == 65535
; run: %copy_i16(-1) == -1
; run: %copy_i16(127) == 127

function %copy_i32(i32) -> i32 {
block0(v0: i32):
  v1 = copy v0
  return v1
}
; run: %copy_i32(0) == 0
; run: %copy_i32(4294967295) == 4294967295
; run: %copy_i32(-1) == -1
; run: %copy_i32(127) == 127

function %copy_i64(i64) -> i64 {
block0(v0: i64):
  v1 = copy v0
  return v1
}
; run: %copy_i64(0) == 0
; run: %copy_i64(18446744073709551615) == 18446744073709551615
; run: %copy_i64(-1) == -1
; run: %copy_i64(127) == 127

function %copy_b1(b1) -> b1 {
block0(v0: b1):
  v1 = copy v0
  return v1
}
; run: %copy_b1(false) == false
; run: %copy_b1(true) == true

function %copy_b8(b8) -> b8 {
block0(v0: b8):
  v1 = copy v0
  return v1
}
; run: %copy_b8(false) == false
; run: %copy_b8(true) == true

function %copy_b16(b16) -> b16 {
block0(v0: b16):
  v1 = copy v0
  return v1
}
; run: %copy_b16(false) == false
; run: %copy_b16(true) == true

function %copy_b32(b32) -> b32 {
block0(v0: b32):
  v1 = copy v0
  return v1
}
; run: %copy_b32(false) == false
; run: %copy_b32(true) == true

function %copy_b64(b64) -> b64 {
block0(v0: b64):
  v1 = copy v0
  return v1
}
; run: %copy_b64(false) == false
; run: %copy_b64(true) == true

function %copy_f32(f32) -> f32 {
block0(v0: f32):
  v1 = copy v0
  return v1
}
; run: %copy_f32(0x1.0) == 0x1.0
; run: %copy_f32(0x1.0p10) == 0x1.0p10

; run: %copy_f32(0x0.0) == 0x0.0
; run: %copy_f32(-0x0.0) == -0x0.0
; run: %copy_f32(+Inf) == +Inf
; run: %copy_f32(-Inf) == -Inf
; run: %copy_f32(0x1.000002p-23) == 0x1.000002p-23
; run: %copy_f32(0x1.fffffep127) == 0x1.fffffep127
; run: %copy_f32(0x1.000000p-126) == 0x1.000000p-126
; run: %copy_f32(0x0.800002p-126) ==  0x0.800002p-126
; run: %copy_f32(-0x0.800000p-126) == -0x0.800000p-126

function %copy_f64(f64) -> f64 {
block0(v0: f64):
  v1 = copy v0
  return v1
}
; run: %copy_f64(0x2.0) == 0x2.0
; run: %copy_f64(0x1.0p11) == 0x1.0p11

; run: %copy_f64(0x0.0) == 0x0.0
; run: %copy_f64(-0x0.0) == -0x0.0
; run: %copy_f64(+Inf) == +Inf
; run: %copy_f64(-Inf) == -Inf
; run: %copy_f64(0x1.0000000000002p-52) == 0x1.0000000000002p-52
; run: %copy_f64(0x1.fffffffffffffp1023) == 0x1.fffffffffffffp1023
; run: %copy_f64(0x1.0000000000000p-1022) == 0x1.0000000000000p-1022
; run: %copy_f64(0x0.8000000000002p-1022) == 0x0.8000000000002p-1022
; run: %copy_f64(-0x0.8000000000000p-1022) == -0x0.8000000000000p-1022
