test interpret
test run
target aarch64
target s390x
set enable_simd
target x86_64 has_sse3 has_ssse3 has_sse41
target x86_64 has_sse3 has_ssse3 has_sse41 has_avx

function %insertlane_15(i8x16, i8) -> i8x16 {
block0(v0: i8x16, v1: i8):
    v2 = insertlane v0, v1, 15
    return v2
}
; run: %insertlane_15([1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1], 120) == [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 120]

function %insertlane_5(i16x8, i16) -> i16x8 {
block0(v0: i16x8, v1: i16):
    v2 = insertlane v0, v1, 5
    return v2
}
; run: %insertlane_5([1 1 1 1 1 1 1 1], 10000) == [1 1 1 1 1 10000 1 1]

function %insertlane_2(i32x4, i32) -> i32x4 {
block0(v0: i32x4, v1: i32):
    v2 = insertlane v0, v1, 2
    return v2
}
; run: %insertlane_2([1 1 1 1], 100000) == [1 1 100000 1]

function %insertlane_0(i64x2, i64) -> i64x2 {
block0(v0: i64x2, v1: i64):
    v2 = insertlane v0, v1, 0
    return v2
}
; run: %insertlane_0([1 1], 5000000000) == [5000000000 1]

function %insertlane_0_in_f64x2(f64x2, f64) -> f64x2 {
block0(v0: f64x2, v1: f64):
    v2 = insertlane v0, v1, 0
    return v2
}
; run: %insertlane_0_in_f64x2([0x1.0 0x2.0], 0x3.0) == [0x3.0 0x2.0]

function %insertlane_1_in_f64x2(f64x2, f64) -> f64x2 {
block0(v0: f64x2, v1: f64):
    v2 = insertlane v0, v1, 1
    return v2
}
; run: %insertlane_1_in_f64x2([0x1.0 0x2.0], 0x3.0) == [0x1.0 0x3.0]
