;; !!! GENERATED BY 'make-heap-load-store-tests.sh' DO NOT EDIT !!!

test interpret
;; test run
;; target x86_64
;; target s390x
;; target aarch64
;; target riscv64

set enable_heap_access_spectre_mitigation=true

function %do_store(i64 vmctx, i32, i32) {
    gv0 = vmctx
    gv1 = load.i64 notrap aligned gv0+0
    
    heap0 = static gv1, min 0x1000, bound 0x1000, offset_guard 0xffff_ffff, index_type i32

block0(v0: i64, v1: i32, v2: i32):
    heap_store.i32 heap0 little v1+4, v2
    return
}

function %test(i64 vmctx, i32, i32) -> i32 {
    gv0 = vmctx
    gv1 = load.i64 notrap aligned gv0+0
    
    heap0 = static gv1, min 0x1000, bound 0x1000, offset_guard 0xffff_ffff, index_type i32
    fn0 = %do_store(i64, i32, i32)

block0(v0: i64, v1: i32, v2: i32):
    call fn0(v0, v1, v2)
    v3 = heap_load.i32 heap0 little v1+4
    return v3
}
; heap: static, size=0x1000, ptr=vmctx+0, bound=vmctx+8
; run: %test(0, 0) == 0
; run: %test(0, -1) == -1
; run: %test(16, 1) == 1
; run: %test(16, -1) == -1
; run: %test(2049, 0xaabb_ccdd) == 0xaabb_ccdd
