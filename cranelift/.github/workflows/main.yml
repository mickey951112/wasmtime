jobs:
  docs:
    name: Build API Docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Install Rust
      run: rustup update nightly && rustup default nightly
    - run: cargo doc --all --exclude cranelift-codegen-meta
    - run: cargo doc --package cranelift-codegen-meta --document-private-items
    - run: cargo install cargo-deadlinks
    - run: find ./target/doc -maxdepth 1 -type d -name "cranelift*" | xargs -I{} cargo deadlinks --dir {}
      name: Run cargo-deadlinks

    # Ensure fuzzer works by running it with a single input
    - run: cargo install cargo-fuzz
      if: matrix.rust == 'nightly'
    - run: |
        fuzz_module="ffaefab69523eb11935a9b420d58826c8ea65c4c"
        cargo fuzz run fuzz_translate_module fuzz/corpus/fuzz_translate_module/$fuzz_module
      env:
        RUST_BACKTRACE: 1
      if: matrix.rust == 'nightly'
      continue-on-error: true

  meta_determinist_check:
    name: Meta deterministic check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Install Rust
      run: rustup update stable && rustup default stable
    - run: cargo build
    - run: ci/ensure_deterministic_build.sh

  fuzz:
    name: Fuzz Regression
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Rust
      run: rustup update nightly && rustup default nightly
    - run: cargo install cargo-fuzz
    - run: ci/fuzzit.sh local-regression

  fuzz_push:
    name: Fuzz (push)
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v1
    - name: Install Rust
      run: rustup update nightly && rustup default nightly
    - run: cargo install cargo-fuzz
    - run: ci/fuzzit.sh fuzzing
      env:
        FUZZIT_API_KEY: ${{ secrets.FUZZIT_API_KEY }}
